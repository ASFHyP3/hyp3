name: Deploy to AWS

on:
  push:
    branches:
      - master
      - develop
      - asj-json

env:
  AWS_REGION: us-west-2
  TEMPLATE_BUCKET: cf-templates-aubvn3i9olmk-us-west-2
  RTC_GAMMA_REPOSITORY: 845172464411.dkr.ecr.us-west-2.amazonaws.com/rtc-gamma

  VPC_ID: ${{ secrets.VPC_ID }}
  EDL_USERNAME: ${{ secrets.EDL_USERNAME }}
  EDL_PASSWORD: ${{ secrets.EDL_PASSWORD }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CLOUDFORMATION_ROLE_ARN: ${{ secrets.CLOUDFORMATION_ROLE_ARN }}
  CERTIFICATE_ARN: ${{ secrets.CERTIFICATE_ARN }}

jobs:

  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - if: endsWith(github.ref, '/asj-deploy')
        run: |
          echo "::set-env name=STACK_NAME::hyp3-asj-json"
          echo "::set-env name=DOMAIN_NAME::hyp3-asj.asf.alaska.edu"
          echo "::set-env name=IMAGE_TAG::test"
          echo "::set-env name=AUTH_GROUP_NAME::HAS_ACCESS_TO_HYP3_TEST"

      - if: endsWith(github.ref, '/develop')
        run: |
          echo "::set-env name=STACK_NAME::hyp3-test"
          echo "::set-env name=DOMAIN_NAME::hyp3-test-api.asf.alaska.edu"
          echo "::set-env name=IMAGE_TAG::test"
          echo "::set-env name=AUTH_GROUP_NAME::HAS_ACCESS_TO_HYP3_TEST"

      - if: endsWith(github.ref, '/master')
        run: |
          echo "::set-env name=STACK_NAME::hyp3"
          echo "::set-env name=DOMAIN_NAME::hyp3-api.asf.alaska.edu"
          echo "::set-env name=IMAGE_TAG::latest"
          echo "::set-env name=AUTH_GROUP_NAME::HAS_ACCESS_TO_HYP3"

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - working-directory: api
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt -t src

      - run: |
          aws cloudformation package \
            --template-file cloudformation.yml \
            --s3-bucket ${TEMPLATE_BUCKET} \
            --output-template-file packaged.yml
          aws cloudformation deploy \
            --stack-name ${STACK_NAME} \
            --template-file packaged.yml \
            --role-arn ${CLOUDFORMATION_ROLE_ARN} \
            --capabilities CAPABILITY_IAM \
            --parameter-overrides \
                "VpcId=${VPC_ID}" \
                "EDLUsername=${EDL_USERNAME}" \
                "EDLPassword=${EDL_PASSWORD}" \
                "RtcGammaImage=${RTC_GAMMA_REPOSITORY}:${IMAGE_TAG}" \
                "DomainName=${DOMAIN_NAME}" \
                "CertificateArn=${CERTIFICATE_ARN}" \
                "AuthGroupName=${AUTH_GROUP_NAME}"
