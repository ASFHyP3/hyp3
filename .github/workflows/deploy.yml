name: Deploy to AWS

on:
  push:
    branches:
      - main
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - environment: hyp3
            domain: hyp3-api.asf.alaska.edu
            template_bucket: cf-templates-aubvn3i9olmk-us-west-2
            image_tag: latest
            quota: 1000
            deploy_ref: refs/heads/main

          - environment: hyp3-test
            domain: hyp3-test-api.asf.alaska.edu
            template_bucket: cf-templates-aubvn3i9olmk-us-west-2
            image_tag: test
            quota: 1000
            deploy_ref: refs/heads/develop

          - environment: hyp3-autorift
            domain: hyp3-autorift.asf.alaska.edu
            template_bucket: cf-templates-igavixdzdy7k-us-west-2
            image_tag: latest
            quota: 0
            deploy_ref: refs/heads/main

    environment:
      name: ${{ matrix.environment }}
      url: https://${{ matrix.domain }}

    steps:
      - uses: actions/checkout@v2

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.V2_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.V2_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - uses: ./.github/actions/deploy-hyp3
        if: github.ref == matrix.deploy_ref
        with:
          TEMPLATE_BUCKET:  ${{ matrix.template_bucket }}
          STACK_NAME: ${{ matrix.environment }}
          DOMAIN_NAME: ${{ matrix.domain }}
          CERTIFICATE_ARN:  ${{ secrets.CERTIFICATE_ARN }}
          IMAGE_TAG: ${{ matrix.image_tag }}
          VPC_ID: ${{ secrets.VPC_ID }}
          SUBNET_IDS: ${{ secrets.SUBNET_IDS }}
          EDL_USERNAME: ${{ secrets.EDL_USERNAME }}
          EDL_PASSWORD: ${{ secrets.EDL_PASSWORD }}
          CLOUDFORMATION_ROLE_ARN: ${{ secrets.CLOUDFORMATION_ROLE_ARN }}
          MONTHLY_JOB_QUOTA_PER_USER: ${{ matrix.quota }}

  tag:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.TOOLS_BOT_PAK }}

      - uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: install python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install bump2version

      - name: Get associated PR
        uses: helaili/github-graphql-action@2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.TOOLS_BOT_PAK }}
        with:
          query: .github/queries/asssociated-pr.query.yml
          outputFile: pr.json
          owner: ASFHyP3
          name: hyp3
          sha: ${{ github.sha }}

      - name: Get PR labels
        uses: helaili/github-graphql-action@2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.TOOLS_BOT_PAK }}
        with:
          query: .github/queries/pr-labels.query.yml
          outputFile: labels.json
          owner: ASFHyP3
          name: hyp3

      - name: Tag version
        run: |
          git fetch origin +refs/tags/*:refs/tags/*
          git config user.email "UAF-asf-apd@alaska.edu"
          git config user.name "tools-bot"
          LABEL_QUERY='.data.repository.pullRequest.labels.nodes[].name'
          SELECT='select(. == "major" or . == "minor" or . == "patch")'
          BUMP_PART=$(jq --raw-output  "${LABEL_QUERY} | ${SELECT}" labels.json | sort | head -1)
          PR_QUERY='.data.repository.commit.associatedPullRequests.edges[0].node.title'
          TAG_MSG=$(jq --raw-output "${PR_QUERY}"  pr.json)
          bump2version --current-version $(git describe --abbrev=0) \
              --tag --tag-message "${TAG_MSG}" "${BUMP_PART}"
          git push --tags
          echo "Tagged version $(git describe --abbrev=0) and pushed back to repo"
