name: Deploy HyP3
description: Deploy a HyP3 stack

inputs:
  TEMPLATE_BUCKET:
    description: "S3 Bucket for CloudFormation deployment artifacts"
    required: true
  STACK_NAME:
    description: "Name of the deployed stack"
    required: true
  DOMAIN_NAME:
    description: "HyP3 API domain name"
    required: true
  API_NAME:
    description: "HyP3 API name"
    required: true
  CERTIFICATE_ARN:
    description: "ARN for AWS Certificate Manager SSL certificate"
    required: true
  IMAGE_TAG:
    description: "HyP3 plugin docker image tag to pull"
    required: true
  PRODUCT_LIFETIME:
    description: "Number of days to keep output files before deleting them"
    required: true
  VPC_ID:
    description: "Default VPC ID"
    required: true
  SUBNET_IDS:
    description: "Comma separated list of Subnet IDs"
    required: true
  SECRET_ARN:
    description: "ARN of Secret in AWS Secrets Manager containing all the credentials needed for job steps"
    required: true
  DEFAULT_CREDITS_PER_USER:
    description: "The default number of credits given to a new user"
    required: true
  DEFAULT_APPLICATION_STATUS:
    description: "The default status for new user applications."
    required: true
  COST_PROFILE:
    description: "Job spec cost profile"
    required: true
  JOB_FILES:
    description: "Space separated list of job spec YAMLs to include"
    required: true
  DEFAULT_MAX_VCPUS:
    description: "Default maximum size for the AWS Batch compute environment"
    required: true
  EXPANDED_MAX_VCPUS:
    description: "Expanded maximum size for the AWS Batch compute environment to use when month-to-date budget sufficiently exceeds month-to-date spending"
    required: true
  MONTHLY_BUDGET:
    description: "Total budget allocated per month, in dollars. Ignored when DefaultMaxvCpus = ExpandedMaxvCpus."
    required: true
  REQUIRED_SURPLUS:
    description: "Amount by which month-to-date budget must exceed month-to-date spending to increase fleet size, in dollars. Ignored when DefaultMaxvCpus = ExpandedMaxvCpus."
    required: true
  ORIGIN_ACCESS_IDENTITY_ID:
    description: "ID of the CloudFront Origin Access Identity used to access data in S3 for Earthdata Cloud deployments"
    required: true
  SECURITY_ENVIRONMENT:
    description: "Modify resources/configurations for ASF (default), EDC, or JPL security environments"
    required: true
  AMI_ID:
    description: "Name of the Systems Manager parameter from which to retrieve the current Ami Id"
    required: true
  INSTANCE_TYPES:
    description: "Comma separated list of supported EC2 instance types"
    required: true
  DISTRIBUTION_URL:
    description: "CloudFront Distribution URL for Earthdata Cloud environments"
    required: true
  AUTH_PUBLIC_KEY:
    description: "Public key for jwt auth provider"
    required: true

runs:
  using: "composite"
  steps:
      - name: install dependencies and render templates
        shell: bash
        run: |
          sudo snap install node --classic
          sudo npm install -g aws-cdk
          pip install --upgrade pip
          make install
          make files='${{ inputs.JOB_FILES }}' security_environment='${{ inputs.SECURITY_ENVIRONMENT }}' api_name='${{ inputs.API_NAME }}' cost_profile='${{ inputs.COST_PROFILE }}' build
      - name: Package and deploy
        shell: bash
        run: |
          aws cloudformation package \
            --template-file apps/main-cf.yml \
            --s3-bucket '${{ inputs.TEMPLATE_BUCKET }}' \
            --output-template-file packaged.yml

          export \
            STACK_NAME='${{ inputs.STACK_NAME }}' \
            VPC_ID='${{ inputs.VPC_ID }}' \
            SUBNET_IDS='${{ inputs.SUBNET_IDS }}' \
            SECRET_ARN='${{ inputs.SECRET_ARN }}' \
            IMAGE_TAG='${{ inputs.IMAGE_TAG }}' \
            PRODUCT_LIFETIME='${{ inputs.PRODUCT_LIFETIME }}' \
            AUTH_PUBLIC_KEY='${{ inputs.AUTH_PUBLIC_KEY }}' \
            DEFAULT_CREDITS_PER_USER='${{ inputs.DEFAULT_CREDITS_PER_USER }}' \
            DEFAULT_APPLICATION_STATUS='${{ inputs.DEFAULT_APPLICATION_STATUS }}' \
            DEFAULT_MAX_VCPUS='${{ inputs.DEFAULT_MAX_VCPUS }}' \
            EXPANDED_MAX_VCPUS='${{ inputs.EXPANDED_MAX_VCPUS }}' \
            MONTHLY_BUDGET='${{ inputs.MONTHLY_BUDGET }}' \
            REQUIRED_SURPLUS='${{ inputs.REQUIRED_SURPLUS }}' \
            AMI_ID='${{ inputs.AMI_ID }}' \
            INSTANCE_TYPES='${{ inputs.INSTANCE_TYPES }}' \
            DOMAIN_NAME='${{ inputs.DOMAIN_NAME }}' \
            CERTIFICATE_ARN='${{ inputs.CERTIFICATE_ARN }}' \
            ORIGIN_ACCESS_IDENTITY_ID='${{ inputs.ORIGIN_ACCESS_IDENTITY_ID }}' \
            DISTRIBUTION_URL='${{ inputs.DISTRIBUTION_URL}}'

          cdk deploy
