name: Deploy HyP3
description: Deploy a HyP3 stack

inputs:
  TEMPLATE_BUCKET:
    description: "S3 Bucket for CloudFormation deployment artifacts"
    required: true
  STACK_NAME:
    description: "Name of the deployed stack"
    required: true
  DOMAIN_NAME:
    description: "HyP3 API domain name"
    required: true
  API_NAME:
    description: "HyP3 API name"
    required: true
  CERTIFICATE_ARN:
    description: "ARN for AWS Certificate Manager SSL certificate"
    required: true
  IMAGE_TAG:
    description: "HyP3 plugin docker image tag to pull"
    required: true
  PRODUCT_LIFETIME:
    description: "Number of days to keep output files before deleting them"
    required: true
  VPC_ID:
    description: "Default VPC ID"
    required: true
  SUBNET_IDS:
    description: "Comma separated list of Subnet IDs"
    required: true
  SECRET_ARN:
    description: "ARN of Secret in AWS Secrets Manager containing all the credentials needed for job tasks"
    required: true
  CLOUDFORMATION_ROLE_ARN:
    description: "The CloudFormation role to use for this deployment"
    required: true
  MONTHLY_JOB_QUOTA_PER_USER:
    description: "The default number of jobs any user with an Earthdata Login can run per month"
    required: true
  JOB_FILES:
    description: "Space seperated list of job spec YAMLs to include"
    required: true
  DEFAULT_MAX_VCPUS:
    description: "Default maximum size for the AWS Batch compute environment"
    required: true
  EXPANDED_MAX_VCPUS:
    description: "Expanded maximum size for the AWS Batch compute environment to use when month-to-date budget sufficiently exceeds month-to-date spending"
    required: true
  MONTHLY_BUDGET:
    description: "Total budget allocated per month, in dollars. Ignored when DefaultMaxvCpus = ExpandedMaxvCpus."
    required: true
  REQUIRED_SURPLUS:
    description: "Amount by which month-to-date budget must exceed month-to-date spending to increase fleet size, in dollars. Ignored when DefaultMaxvCpus = ExpandedMaxvCpus."
    required: true
  PERMISSIONS_BOUNDARY_ARN:
    description: "Arn of permissions boundary to provide to any created IAM roles"
    required: true
  ORIGIN_ACCESS_IDENTITY_ID:
    description: "ID of the CloudFront Origin Access Identity used to access data in S3 for Earthdata Cloud deployments"
    required: true
  SECURITY_ENVIRONMENT:
    description: "Modify resources/configurations for ASF (default), EDC, or JPL security environments"
    required: true
  AMI_ID:
    description: "Name of the Systems Manager parameter from which to retrieve the current Ami Id"
    required: true
  INSTANCE_TYPES:
    description: "Comma separated list of supported EC2 instance types"
    required: true
  DISTRIBUTION_URL:
    description: "CloudFront Distribution URL for Earthdata Cloud environments"
    required: true

runs:
  using: "composite"
  steps:
      - name: install dependencies and render templates
        shell: bash
        run: |
          pip install --upgrade pip
          make install
          make files='${{ inputs.JOB_FILES }}' security_environment='${{ inputs.SECURITY_ENVIRONMENT }}' api_name='${{ inputs.API_NAME }}' build
      - name: Package and deploy
        shell: bash
        run: |
          [ -z ${{ inputs.CLOUDFORMATION_ROLE_ARN }} ] && export ROLE_STATEMENT="" \
            || export ROLE_STATEMENT="--role-arn ${{ inputs.CLOUDFORMATION_ROLE_ARN }}"

          [ -z ${{ inputs.DOMAIN_NAME }} ] && export DOMAIN_NAME="" \
            || export DOMAIN_NAME="DomainName=${{ inputs.DOMAIN_NAME }}"

          [ -z ${{ inputs.CERTIFICATE_ARN }} ] && export CERTIFICATE_ARN="" \
            || export CERTIFICATE_ARN="CertificateArn=${{ inputs.CERTIFICATE_ARN }}"

          [ -z ${{ inputs.PERMISSIONS_BOUNDARY_ARN }} ] && export PERMISSIONS_BOUNDARY_ARN="" \
            || export PERMISSIONS_BOUNDARY_ARN="PermissionsBoundaryPolicyArn=${{ inputs.PERMISSIONS_BOUNDARY_ARN }}"

          [ -z ${{ inputs.ORIGIN_ACCESS_IDENTITY_ID }} ] && export ORIGIN_ACCESS_IDENTITY_ID="" \
            || export ORIGIN_ACCESS_IDENTITY_ID="OriginAccessIdentityId=${{ inputs.ORIGIN_ACCESS_IDENTITY_ID }}"

          [ -z ${{ inputs.DISTRIBUTION_URL }} ] && export DISTRIBUTION_URL="" \
            || export DISTRIBUTION_URL="DistributionUrl=${{ inputs.DISTRIBUTION_URL }}"

          aws cloudformation package \
            --template-file apps/main-cf.yml \
            --s3-bucket ${{ inputs.TEMPLATE_BUCKET }} \
            --output-template-file packaged.yml
          aws cloudformation deploy \
            --stack-name ${{ inputs.STACK_NAME }} \
            --template-file packaged.yml \
            $ROLE_STATEMENT \
            --capabilities CAPABILITY_IAM \
            --parameter-overrides \
                VpcId='${{ inputs.VPC_ID }}' \
                SubnetIds='${{ inputs.SUBNET_IDS }}' \
                SecretArn='${{ inputs.SECRET_ARN }}' \
                ImageTag='${{ inputs.IMAGE_TAG }}' \
                ProductLifetimeInDays='${{ inputs.PRODUCT_LIFETIME }}' \
                $DOMAIN_NAME \
                $CERTIFICATE_ARN \
                $PERMISSIONS_BOUNDARY_ARN \
                $ORIGIN_ACCESS_IDENTITY_ID \
                $DISTRIBUTION_URL \
                MonthlyJobQuotaPerUser='${{ inputs.MONTHLY_JOB_QUOTA_PER_USER }}' \
                DefaultMaxvCpus='${{ inputs.DEFAULT_MAX_VCPUS }}' \
                ExpandedMaxvCpus='${{ inputs.EXPANDED_MAX_VCPUS }}' \
                MonthlyBudget='${{ inputs.MONTHLY_BUDGET }}' \
                RequiredSurplus='${{ inputs.REQUIRED_SURPLUS }}' \
                AmiId='${{ inputs.AMI_ID }}' \
                InstanceTypes='${{ inputs.INSTANCE_TYPES }}'
