AWSTemplateFormatVersion: 2010-09-09

Parameters:

  VpcId:
    Type: AWS::EC2::VPC::Id

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>

  EDLUsername:
    Type: String

  EDLPassword:
    Type: String
    NoEcho: true

  RtcGammaImage:
    Type: String

  InsarGammaImage:
    Type: String

  AmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id

  ContentBucket:
    Type: String

Outputs:

  JobQueueArn:
    Value: !Ref JobQueue

  RtcGammaJobDefinition:
    Value: !Ref RtcGammaJobDefinition

  InsarGammaJobDefinition:
    Value: !Ref InsarGammaJobDefinition

Resources:

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "Security group for ${AWS::StackName} machines"
      VpcId: !Ref VpcId

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        UserData:
          Fn::Base64: |-
            Content-Type: multipart/mixed; boundary="==BOUNDARY=="
            MIME-Version: 1.0

            --==BOUNDARY==
            Content-Type: text/cloud-boothook; charset="us-ascii"

            cloud-init-per instance mkfs_ssd mkfs.ext4 /dev/nvme1n1
            cloud-init-per instance mount_ssd mount /dev/nvme1n1 /var/lib/docker

            --==BOUNDARY==--

  ComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      ServiceRole: !GetAtt BatchServiceRole.Arn
      Type: MANAGED
      ComputeResources:
        Type: SPOT
        AllocationStrategy: SPOT_CAPACITY_OPTIMIZED
        MinvCpus: 0
        MaxvCpus: 400
        InstanceTypes:
          - r5d.xlarge
        ImageId: !Ref AmiId
        Subnets: !Ref SubnetIds
        InstanceRole: !Ref InstanceProfile
        SecurityGroupIds:
          - !Ref SecurityGroup
        LaunchTemplate:
          LaunchTemplateId: !Ref LaunchTemplate
          Version: $Latest
        Tags:
          Name: !Ref AWS::StackName

  JobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      Priority: 1
      ComputeEnvironmentOrder:
        - ComputeEnvironment: !Ref ComputeEnvironment
          Order: 1

  RtcGammaJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      Parameters:
        granule0: ""
        bucket: !Ref ContentBucket
        bucket_prefix: ""
        username: !Ref EDLUsername
        password: !Ref EDLPassword
        resolution: 30.0
        radiometry: gamma0
        scale: power
        dem_matching: false
        include_dem: false
        include_inc_map: false
      ContainerProperties:
        Image: !Ref RtcGammaImage
        Vcpus: 4
        Memory: 30000
        JobRoleArn: !GetAtt TaskRole.Arn
        Command:
          - ++entrypoint
          - hyp3_rtc_gamma_v2
          - --username
          - Ref::username
          - --password
          - Ref::password
          - --bucket
          - Ref::bucket
          - --bucket-prefix
          - Ref::bucket_prefix
          - --resolution
          - Ref::resolution
          - --radiometry
          - Ref::radiometry
          - --scale
          - Ref::scale
          - --dem-matching
          - Ref::dem_matching
          - --include-dem
          - Ref::include_dem
          - --include-inc-map
          - Ref::include_inc_map
          - Ref::granule0
      Timeout:
        AttemptDurationSeconds: 5400

  InsarGammaJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      Parameters:
        granule0: ""
        granule1: ""
        bucket: !Ref ContentBucket
        bucket_prefix: ""
        username: !Ref EDLUsername
        password: !Ref EDLPassword
        include_inc_map: false
        include_los_displacement: false
        looks: 20x4
      ContainerProperties:
        Image: !Ref InsarGammaImage
        Vcpus: 4
        Memory: 30000
        JobRoleArn: !GetAtt TaskRole.Arn
        Command:
          - ++entrypoint
          - hyp3_insar_gamma_v2
          - --username
          - Ref::username
          - --password
          - Ref::password
          - --bucket
          - Ref::bucket
          - --bucket-prefix
          - Ref::bucket_prefix
          - --include-inc-map
          - Ref::include_inc_map
          - --include-los-displacement
          - Ref::include_los_displacement
          - --looks
          - Ref::looks
          - Ref::granule0
          - Ref::granule1
      Timeout:
        AttemptDurationSeconds: 5400

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Action: sts:AssumeRole
          Principal:
            Service: ecs-tasks.amazonaws.com
          Effect: Allow
      Policies:
        - PolicyName: policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: s3:PutObject
                Resource: !Sub "arn:aws:s3:::${ContentBucket}/*"
              - Effect: Allow
                Action: s3:PutObjectTagging
                Resource: !Sub "arn:aws:s3:::${ContentBucket}/*"

  BatchServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Action: sts:AssumeRole
          Principal:
            Service: batch.amazonaws.com
          Effect: Allow
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Action: sts:AssumeRole
          Principal:
            Service: ec2.amazonaws.com
          Effect: Allow
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
      Policies:
        - PolicyName: policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: batch:DescribeComputeEnvironments
                Resource: "*"

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref InstanceRole
