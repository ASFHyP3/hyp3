AWSTemplateFormatVersion: 2010-09-09

Parameters:

  Bucket:
    Type: String

Outputs:

  UploadLogActivity:
    Value: !Ref UploadLogActivity

Resources:

  UploadLogActivity:
    Type: AWS::StepFunctions::Activity
    Properties:
      Name: !Sub "${AWS::StackName}-upload-log-activity"

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${Lambda}"
      RetentionInDays: 90

  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Action: sts:AssumeRole
          Principal:
            Service: lambda.amazonaws.com
          Effect: Allow
      Policies:
        - PolicyName: policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*"
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:PutObjectTagging
                Resource: !Sub "arn:aws:s3:::${Bucket}/*"
              - Effect: Allow
                Action: logs:GetLogEvents
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/batch/job*"

  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      Environment:
        Variables:
          BUCKET: !Ref Bucket
          ACTIVITY_ARN: !Ref UploadLogActivity
      Code: src/
      Handler: upload_log.lambda_handler
      MemorySize: 128
      Role: !GetAtt Role.Arn
      Runtime: python3.8
      Timeout: 30
