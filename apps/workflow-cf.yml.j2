AWSTemplateFormatVersion: 2010-09-09

Parameters:

  JobQueueArn:
    Type: String

  EDLUsername:
    Type: String

  EDLPassword:
    Type: String
    NoEcho: true

  JobsTable:
    Type: String

  Bucket:
    Type: String

  ImageTag:
    Type: String

  TaskRoleArn:
    Type: String

  AutoriftNamingScheme:
    Type: String
    Default: ITS_LIVE_OD
    AllowedValues:
      - ITS_LIVE_OD
      - ITS_LIVE_PROD

Outputs:
  StepFunctionArn:
    Value: !Ref StepFunction

Resources:
  {% for job_type, job_spec in  job_types.items() %}
  {{ job_type }}:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      Parameters:
        {% for k, v in job_spec['parameters'].items() %}
        {{ k }}: {{ v['default'] }}
        {% endfor %}
      ContainerProperties:
        Image: !Sub "{{ job_spec['image'] }}:${ImageTag}"
        Vcpus: 1
        Memory: 30000
        JobRoleArn: !Ref TaskRoleArn
        Command:
          {% for command in job_spec['command'] %}
          - {{ command }}
          {% endfor %}
      Timeout:
        AttemptDurationSeconds: {{ job_spec['timeout'] }}
  {% endfor %}

  StepFunction:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFunctionRole.Arn
      DefinitionS3Location: step-function.json
      DefinitionSubstitutions:
        JobQueueArn: !Ref JobQueueArn
        {% for job_type in job_types %}
        {{ job_type }}: !Ref {{ job_type }}
        {% endfor %}
        UpdateDBLambdaArn: !GetAtt UpdateDB.Outputs.LambdaArn
        GetFilesLambdaArn: !GetAtt GetFiles.Outputs.LambdaArn
        UploadLogActivityArn: !GetAtt UploadLog.Outputs.ActivityArn

  StepFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Action: sts:AssumeRole
          Principal:
            Service: states.amazonaws.com
          Effect: Allow
      Policies:
        - PolicyName: policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: batch:SubmitJob
                Resource:
                  - !Ref JobQueueArn
                  {% for job_type in job_types %}
                  - !Ref {{ job_type }}
                  {% endfor %}
              - Effect: Allow
                Action:
                  - events:PutTargets
                  - events:PutRule
                  - events:DescribeRule
                Resource: !Sub "arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/StepFunctionsGetEventsForBatchJobsRule"
              - Effect: Allow
                Action: lambda:InvokeFunction
                Resource:
                 - !GetAtt UpdateDB.Outputs.LambdaArn
                 - !GetAtt GetFiles.Outputs.LambdaArn
                 - !GetAtt UploadLog.Outputs.LambdaArn

  UpdateDB:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        JobsTable: !Ref JobsTable
      TemplateURL: update-db/update-db-cf.yml

  GetFiles:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        Bucket: !Ref Bucket
      TemplateURL: get-files/get-files-cf.yml

  StartExecution:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        JobsTable: !Ref JobsTable
        StepFunctionArn: !Ref StepFunction
      TemplateURL: start-execution/start-execution-cf.yml

  UploadLog:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        Bucket: !Ref Bucket
      TemplateURL: upload-log/upload-log-cf.yml
