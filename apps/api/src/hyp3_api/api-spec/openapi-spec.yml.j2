openapi: 3.0.1

info:
  title: {{ api_name }}-api
  version: ""

security:
  - EarthDataLogin: []

paths:

  /jobs:

    post:
      description: Submits a list of jobs for processing.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/post_jobs_body"
        required: true
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/jobs_response"

    get:
      description: Get list of previously run jobs.
      parameters:
        - name: user_id
          in: query
          schema:
            $ref: "#/components/schemas/user_id"
        - name: status_code
          in: query
          schema:
            $ref: "#/components/schemas/status_code"
        - name: start
          in: query
          schema:
            $ref: "#/components/schemas/datetime"
        - name: end
          in: query
          schema:
            $ref: "#/components/schemas/datetime"
        - name: name
          in: query
          schema:
            $ref: "#/components/schemas/name"
        - name: job_type
          in: query
          schema:
            $ref: "./job_parameters.yml#components/schemas/job_type"
        - name: start_token
          in: query
          schema:
            $ref: "#/components/schemas/start_token"
        - name: subscription_id
          in: query
          schema:
            $ref: "#/components/schemas/job_or_subscription_id"

      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/jobs_response"

  /jobs/{job_id}:
    get:
      description: Get a previously run job.
      parameters:
        - name: job_id
          in: path
          schema:
            $ref: "#/components/schemas/job_or_subscription_id"
          required: true

      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job"

  /user:
    get:
      description: Get information about the logged in user.
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"

  /subscriptions:
    post:
      description: Adds a subscription with search criteria and processing parameters to use to process data as it becomes available
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/subscriptions_body"
        required: true
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                properties:
                  subscription:
                    $ref: "#/components/schemas/subscription"
                  validate_only:
                    $ref: "#/components/schemas/validate_only"


    get:
      description: Get information about subscriptions for the logged in user
      parameters:
        - name: name
          in: query
          schema:
            $ref: "#/components/schemas/name"
        - name: job_type
          in: query
          schema:
            $ref: "./job_parameters.yml#components/schemas/job_type"
        - name: enabled
          in: query
          schema:
            $ref: "#/components/schemas/subscription_enabled"
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                required:
                  - subscriptions
                properties:
                  subscriptions:
                    $ref: "#/components/schemas/list_of_subscriptions"
  /subscriptions/{subscription_id}:
    patch:
      description: Change information about the given subscription
      parameters:
        - name: subscription_id
          in: path
          schema:
            $ref: "#/components/schemas/job_or_subscription_id"
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscriptions_update_expression'
        required: true
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/subscription"
    get:
      description: Get information about a specific subscription
      parameters:
        - name: subscription_id
          in: path
          schema:
            $ref: "#/components/schemas/job_or_subscription_id"
          required: true
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/subscription"

components:
  schemas:

    post_jobs_body:
      description: List for new jobs to submit for processing.
      type: object
      required:
        - jobs
      additionalProperties: false
      properties:
        validate_only:
          $ref: "#/components/schemas/validate_only"
        jobs:
          $ref: "#/components/schemas/list_of_new_jobs"

    jobs_response:
      description: List of submitted jobs.
      type: object
      required:
        - jobs
      additionalProperties: false
      properties:
        validate_only:
          $ref: "#/components/schemas/validate_only"
        jobs:
          $ref: "#/components/schemas/list_of_jobs"
        next:
          $ref: "#/components/schemas/next_url"

    subscriptions_body:
      description: Information about a subscription
      type: object
      required:
        - subscription
      additionalProperties: false
      properties:
        validate_only:
          $ref: "#/components/schemas/validate_only"
        subscription:
          $ref: "#/components/schemas/new_subscription"

    new_subscription:
      description: Contains user provided information about a new subscription
      type: object
      required:
        - search_parameters
        - job_specification
      additionalProperties: false
      properties:
        search_parameters:
          $ref: "#/components/schemas/search_parameters"
        job_specification:
          $ref: "./job_parameters.yml#components/schemas/job_specification"

    subscriptions_update_expression:
      description: Change/update a subscription
      type: object
      additionalProperties: false
      properties:
        start:
          $ref: "#/components/schemas/datetime"
        end:
          $ref: "#/components/schemas/datetime"
        intersectsWith:
          $ref: "#/components/schemas/intersectsWith"
        enabled:
          $ref: "#/components/schemas/subscription_enabled"

    list_of_subscriptions:
      type: array
      items:
        $ref: "#/components/schemas/subscription"

    subscription:
      type: object
      required:
        - subscription_id
        - search_parameters
        - job_specification
        - user_id
        - creation_date
        - enabled
      additionalProperties: false
      properties:
        subscription_id:
          $ref: "#/components/schemas/job_or_subscription_id"
        search_parameters:
          $ref: "#/components/schemas/search_parameters"
        job_specification:
          $ref: "./job_parameters.yml#components/schemas/job_specification"
        user_id:
          $ref: "#/components/schemas/user_id"
        creation_date:
          $ref: "#/components/schemas/datetime"
        enabled:
          $ref: "#/components/schemas/subscription_enabled"

    user:
      description: Information about a user (quota, user id)
      type: object
      required:
        - user_id
        - quota
      additionalProperties: false
      properties:
        user_id:
          $ref: "#/components/schemas/user_id"
        quota:
          $ref: "#/components/schemas/quota"
        job_names:
          $ref: "#components/schemas/job_names_list"

    quota:
      description: Containes the limit of jobs per month and the amount remaining for a user.
      type: object
      required:
        - max_jobs_per_month
        - remaining
      additionalProperties: false
      properties:
        max_jobs_per_month:
          type: integer
          minimum: 0
          nullable: true
        remaining:
          type: integer
          minimum: 0
          nullable: true

    job_names_list:
      type: array
      items:
        $ref: "#/components/schemas/name"

    list_of_new_jobs:
      description: Contains a list of new job objects.
      type: array
      minItems: 1
      maxItems: 200
      items:
        $ref: "./job_parameters.yml#components/schemas/new_job"

    list_of_jobs:
      type: array
      items:
        $ref: "#/components/schemas/job"

    search_parameters:
      description: parameters used to find data from the ASF Search API
      additionalProperties: false
      type: object
      required:
        - start
        - end
      properties:
        start:
          $ref: "#/components/schemas/datetime"
        end:
          $ref: "#/components/schemas/datetime"
        platform:
          type: string
          enum:
            - S1
            - SA
            - SB
        processingLevel:
          type: string
          enum:
            - GRD_HD
            - SLC
        beamMode:
          type: array
          minItems: 1
          items:
            type: string
            enum:
              - IW
        intersectsWith:
          $ref: "#/components/schemas/intersectsWith"
        frame:
          type: array
          minItems: 1
          items:
            type: integer
            minimum: 1
            maximum: 1360
        relativeOrbit:
          type: array
          minItems: 1
          items:
            type: integer
            minimum: 1
            maximum: 175
        polarization:
          type: array
          minItems: 1
          items:
            type: string
            enum:
              - VV
              - VV+VH
              - HH
              - HH+HV
        flightDirection:
          type: string
          enum:
            - ASCENDING
            - DESCENDING

    job:
      description: Contains information about a submitted job.
      type: object
      required:
        - job_id
        - user_id
        - job_type
        - job_parameters
        - request_time
        - status_code
      additionalProperties: false
      properties:
        job_id:
          $ref: "#/components/schemas/job_or_subscription_id"
        subscription_id:
          $ref: "#/components/schemas/job_or_subscription_id"
        user_id:
          $ref: "#/components/schemas/user_id"
        job_type:
          $ref: "./job_parameters.yml#components/schemas/job_type"
        job_parameters:
          $ref: "./job_parameters.yml#components/schemas/job_parameters"
        request_time:
          $ref: "#/components/schemas/datetime"
        status_code:
          $ref: "#/components/schemas/status_code"
        execution_started:
          $ref: "#/components/schemas/execution_started"
        name:
          $ref: "#/components/schemas/name"
        files:
          $ref: "#/components/schemas/list_of_files"
        browse_images:
          $ref: "#/components/schemas/list_of_urls"
        thumbnail_images:
          $ref: "#/components/schemas/list_of_urls"
        logs:
          $ref: "#/components/schemas/list_of_urls"
        expiration_time:
          $ref: "#/components/schemas/datetime"
          nullable: true
        processing_times:
          $ref: "#/components/schemas/processing_times"
        priority:
          $ref: "#/components/schemas/priority"

    validate_only:
      type: boolean
      default: false

    job_or_subscription_id:
      description: Unique identifier for a job or subscription
      type: string
      format: uuid
      example: 27836b79-e5b2-4d8f-932f-659724ea02c3

    user_id:
      description: Username from Earthdata Login.
      type: string
      example: myUserId

    subscription_enabled:
      description: Set to false to pause/disable the processing of new data.
      type: boolean

    datetime:
      description: Date and time object formatted according to ISO 8601
      type: string
      format: date-time
      example: "2020-06-04T18:00:03+00:00"

    intersectsWith:
      description: Area-of-interest as a WKT string.
      type: string
      format: wkt
      example: POINT(0 0)

    status_code:
      description: Status of a submitted job.
      type: string
      enum:
        - PENDING
        - RUNNING
        - SUCCEEDED
        - FAILED
      example: SUCCEEDED

    execution_started:
      description: Whether a workflow execution has been started for the submitted job.
      type: boolean

    name:
      description: User provided text to name the job
      type: string
      minLength: 1
      maxLength: 100
      example: Job Name

    start_token:
      description: Token used for fetching subsequent results for large queries
      type: string

    next_url:
      description: Url provided for large search results that have been truncated. Use to fetch subsequent results.
      type: string

    list_of_files:
      description: List of downloadable files generated by the job.
      type: array
      items:
        type: object
        required:
          - filename
          - size
          - url
          - s3
        additionalProperties: False
        properties:
          filename:
            type: string
          size:
            type: integer
            minimum: 0
          url:
            type: string
          s3:
            $ref: "#/components/schemas/s3_object"

    s3_object:
      type: object
      additionalProperties: false
      required:
        - bucket
        - key
      properties:
        bucket:
          type: string
        key:
          type: string

    list_of_urls:
      type: array
      items:
        type: string

    priority:
      type: integer
      minimum: 0
      maximum: 9999

    processing_times:
      description: >
        A list of run times for the job's processing steps in the order that they were executed. For example,
        a job comprised of a single processing step would yield a list containing one processing time, while a job
        comprised of three processing steps would yield a list containing three processing times. An empty list
        represents a failure to calculate processing times.
      type: array
      items:
        $ref: '#/components/schemas/processing_time_in_seconds'

    processing_time_in_seconds:
      description: >
        Run time in seconds for a particular processing step's final attempt (regardless of whether it succeeded).
        A value of zero indicates that there were no attempts.
      type: number
      minimum: 0

  securitySchemes:
    EarthDataLogin:
      description: |-
        Authentication requires the user to have an account at urs.earthdata.nasa.gov and log in at auth.asf.alaska.edu
      type: apiKey
      in: cookie
      name: asf-urs
